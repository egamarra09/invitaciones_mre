@{
	ViewData["Title"] = "Home Page";
	var eventos = ViewData["eventos"] as List<Invitaciones.Shared.Data.Evento>;
	var ev1 = ViewData["eventos1"] as int[];
	var ev2 = ViewData["eventos2"] as int[];

}
<style>
	.fc-event-title {
		white-space: normal;
	}
</style>
<div class="text-center">
	@*<h1 class="display-4">Bienvenido</h1>*@
	<div class="row">
		<div class="col-lg-6">




			<div class="card">
				<div class="card-header ui-sortable-handle" style="cursor: move;">
					<h3 class="card-title">
						<i class="fas fa-chart-pie mr-1"></i>
						Eventos
					</h3>
					<div class="card-tools">
					</div>
				</div>
				<div class="card-body">
					<div class="tab-content p-0">

						<div class="chart tab-pane active" id="revenue-chart" style="position: relative; height: 300px;">
							<div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
							<canvas id="revenue-chart-canvas" height="300" style="height: 300px; display: block; width: 577px;" width="577" class="chartjs-render-monitor"></canvas>
						</div>

					</div>
					<div class="d-flex flex-row justify-content-end">
						<span class="mr-2">
							&nbsp;
						</span>
						<span>
							&nbsp;
						</span>
					</div>
				</div>
			</div>




		</div>
		<div class="col-lg-6">




			<div class="card">
				<div class="card-header ui-sortable-handle" style="cursor: move;">
					<h3 class="card-title">
						<i class="fas fa-chart-pie mr-1"></i>
						Evolucion de Eventos
					</h3>
					<div class="card-tools">
					</div>
				</div>
				<div class="card-body">
					<div class="tab-content p-0">

						<div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
						<canvas id="sales-chart" height="300" style="display: block; width: 487px; height: 300px;" width="487" class="chartjs-render-monitor"></canvas>
					</div>
					<div class="d-flex flex-row justify-content-end">
						<span class="mr-2">
							<i class="fas fa-square text-primary"></i> 2022
						</span>
						<span>
							<i class="fas fa-square text-gray"></i> 2023
						</span>
					</div>
				</div>
			</div>




		</div>


	</div>



	<div class="row">
		<div class="col-md-12">
			<div class="card ">
				<div class="card-header border-0 ui-sortable-handle" style="cursor: move;">
					<h3 class="card-title">
						<i class="far fa-calendar-alt"></i>
						Calendario de eventos
					</h3>

					<div class="card-tools">
					</div>

				</div>

				<div class="card-body pt-0">

					<div id="calendar" style="width: 100%">
					</div>
				</div>

			</div>
		</div>

	</div>
	<div class="card">
		<div class="card-header border-transparent">
			<h3 class="card-title">Ultimos eventos</h3>
			<div class="card-tools">
				<button type="button" class="btn btn-tool" data-card-widget="collapse">
					<i class="fas fa-minus"></i>
				</button>
				<button type="button" class="btn btn-tool" data-card-widget="remove">
					<i class="fas fa-times"></i>
				</button>
			</div>
		</div>

		<div class="card-body p-0">
			<div class="table-responsive">
				<table class="table m-0">
					<thead>
						<tr>
							<th style="text-align:left;">Evento</th>

							<th>Invitaciones</th>
							<th>Total invitados</th>
							<th>Total confirmado</th>
							<th>&nbsp;</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in eventos.Take(10))
						{
							var inv = item.EventoInvitaciones.FirstOrDefault();
							var tot = 0;
							var con = 0;
							if (inv != null)
							{
								tot = inv.EventoInvitados.Count();
								con = inv.EventoInvitados.Where(q => q.Confirmado == true).Count();
							}
							<tr>
								<td style="text-align:left;"><a href="~/eventos/@item.IdEvento">@item.Evento1</a></td>
								@*<td>Samsung Smart TV</td>*@
								<td>
									@if (inv != null)
									{
										if (inv.Enviado == false)
										{
											<span class="badge badge-warning">Pendiente</span>
										}
										else
										{
											<span class="badge badge-success">Enviado</span>
										}
									}
									else
									{
										<span class="badge badge-warning">Pendiente</span>
									}

								</td>
								<td>@tot</td>
								<td>@con</td>
								<td>
									@if (inv != null)
									{
										<a href="~/EventoInvitaciones/Reporte/@inv.IdInvitacion"><i class="fa fa-list"></i></a>
									}
								</td>

							</tr>
						}


					</tbody>
				</table>
			</div>

		</div>

		<div class="card-footer clearfix">
			<a href="/eventos/" class="btn btn-sm btn-info float-left">Agregar Evento</a>
			<a href="/eventos/" class="btn btn-sm btn-secondary float-right">Ver todos</a>
		</div>

	</div>
</div>
@section Scripts {
	<script>

		//--------------
		//- AREA CHART -
		//--------------

		// Get context with jQuery - using jQuery's .get() method.
		var areaChartCanvas = $('#revenue-chart-canvas').get(0).getContext('2d')

		var areaChartData = {
			labels: ['ENE', 'FEB', 'MAR', 'ABR', 'MAY', 'JUN', 'JUL', 'AGO', 'SEP', 'OCT', 'NOV', 'DIC'],
			datasets: [
				{
					label: 'Eventos',
					backgroundColor: 'rgba(60,141,188,0.9)',
					borderColor: 'rgba(60,141,188,0.8)',
					pointRadius: false,
					pointColor: '#3b8bba',
					pointStrokeColor: 'rgba(60,141,188,1)',
					pointHighlightFill: '#fff',
					pointHighlightStroke: 'rgba(60,141,188,1)',
					data: [@ev1[0], @ev1[1], @ev1[2], @ev1[3], @ev1[4], @ev1[5], @ev1[6], @ev1[7], @ev1[8], @ev1[9], @ev1[10], @ev1[11]]
				},

			]
		}

		var areaChartOptions = {
			maintainAspectRatio: false,
			responsive: true,
			legend: {
				display: false
			},
			scales: {
				xAxes: [{
					gridLines: {
						display: false,
					}
				}],
				yAxes: [{
					gridLines: {
						display: false,
					}
				}]
			}
		}

		// This will get the first returned node in the jQuery collection.
		new Chart(areaChartCanvas, {
			type: 'line',
			data: areaChartData,
			options: areaChartOptions
		})

		//-------------
		//- LINE CHART -
		//--------------
		//var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
		//var lineChartOptions = $.extend(true, {}, areaChartOptions)
		//var lineChartData = $.extend(true, {}, areaChartData)
		//lineChartData.datasets[0].fill = false;
		//lineChartData.datasets[1].fill = false;
		//lineChartOptions.datasetFill = false

		//var lineChart = new Chart(lineChartCanvas, {
		//  type: 'line',
		//  data: lineChartData,
		//  options: lineChartOptions
		//})
		$(function () {
			'use strict'
			var ticksStyle = { fontColor: '#495057', fontStyle: 'bold' }
			var mode = 'index'
			var intersect = true
			var $salesChart = $('#sales-chart')
			var salesChart = new Chart($salesChart, {
				type: 'bar', data: { labels: ['ENE', 'FEB', 'MAR', 'ABR', 'MAY', 'JUN', 'JUL', 'AGO', 'SEP', 'OCT', 'NOV', 'DIC'], datasets: [{ backgroundColor: '#007bff', borderColor: '#007bff', data: [@ev1[0], @ev1[1], @ev1[2], @ev1[3], @ev1[4], @ev1[5], @ev1[6], @ev1[7], @ev1[8], @ev1[9], @ev1[10], @ev1[11]] }, { backgroundColor: '#ced4da', borderColor: '#ced4da', data: [@ev2[0], @ev2[1], @ev2[2], @ev2[3], @ev2[4], @ev2[5], @ev2[6], @ev2[7], @ev2[8], @ev2[9], @ev2[10], @ev2[11]] }] }, options: {
					maintainAspectRatio: false, tooltips: { mode: mode, intersect: intersect }, hover: { mode: mode, intersect: intersect }, legend: { display: false }, scales: {
						yAxes: [{
							gridLines: { display: true, lineWidth: '4px', color: 'rgba(0, 0, 0, .2)', zeroLineColor: 'transparent' }, ticks: $.extend({
								beginAtZero: true, callback: function (value) {
									if (value >= 1000) {
										value /= 1000

									}
									return + value
								}
							}, ticksStyle)
						}], xAxes: [{ display: true, gridLines: { display: false }, ticks: ticksStyle }]
					}
				}
			})
			var $visitorsChart = $('#visitors-chart')
			var visitorsChart = new Chart($visitorsChart, { data: { labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'], datasets: [{ type: 'line', data: [100, 120, 170, 167, 180, 177, 160], backgroundColor: 'transparent', borderColor: '#007bff', pointBorderColor: '#007bff', pointBackgroundColor: '#007bff', fill: false }, { type: 'line', data: [60, 80, 70, 67, 80, 77, 100], backgroundColor: 'tansparent', borderColor: '#ced4da', pointBorderColor: '#ced4da', pointBackgroundColor: '#ced4da', fill: false }] }, options: { maintainAspectRatio: false, tooltips: { mode: mode, intersect: intersect }, hover: { mode: mode, intersect: intersect }, legend: { display: false }, scales: { yAxes: [{ gridLines: { display: true, lineWidth: '4px', color: 'rgba(0, 0, 0, .2)', zeroLineColor: 'transparent' }, ticks: $.extend({ beginAtZero: true, suggestedMax: 200 }, ticksStyle) }], xAxes: [{ display: true, gridLines: { display: false }, ticks: ticksStyle }] } } })
		})
		$(document).ready(function () {
			var date = new Date();
			var d = date.getDate(),
				m = date.getMonth(),
				y = date.getFullYear();

			var Calendar = FullCalendar.Calendar;
			var calendarEl = document.getElementById("calendar");

			var fillcalendar = [];

			//for (let i = 16; i < 20; i++) {
		@foreach (var e in eventos)
		{
			if (e.FechaInicio.HasValue == true)
			{
				<text>
						fillcalendar.push({
							title: "@Html.Raw(e.Evento1)",
							start: new Date(@e.FechaInicio.Value.Year, @e.FechaInicio.Value.Month, @e.FechaInicio.Value.Day),
							backgroundColor: "#f56954",
							borderColor: "#f56954",
							allDay: true
						});
				</text>
			}
		}




		  var calendar = new Calendar(calendarEl, {
					headerToolbar: {
						left: "prev,next today",
						center: "title",
						right: "dayGridMonth"
					},
					locales: 'es',
					//themeSystem: "bootstrap",
					//custom fill
					events: fillcalendar,
					editable: true,
					droppable: true, // this allows things to be dropped onto the calendar !!!
					drop: function (info) {
						// is the "remove after drop" checkbox checked?
						if (checkbox.checked) {
							// if so, remove the element from the "Draggable Events" list
							info.draggedEl.parentNode.removeChild(info.draggedEl);
						}
					}
				});

			calendar.render();
		});

	</script>
}